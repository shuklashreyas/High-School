/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author shreyasshukla
 */
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;
import javax.swing.JList;
public class MP3GUI extends javax.swing.JFrame {

    DefaultListModel mod = new DefaultListModel();
    
  private songList songs;

    public MP3GUI() 
    {
        songs = new songList();
        initComponents();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        deleteSong = new javax.swing.JButton();
        sortDuration = new javax.swing.JButton();
        showAll = new javax.swing.JButton();
        addSong = new javax.swing.JButton();
        sizeList = new javax.swing.JButton();
        editDuration1 = new javax.swing.JButton();
        showLastSong = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        quit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        GuiSongList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        deleteSong.setText("Delete a song");
        deleteSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSongActionPerformed(evt);
            }
        });

        sortDuration.setText("Sort - Duration");
        sortDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortDurationActionPerformed(evt);
            }
        });

        showAll.setText("Show All");
        showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllActionPerformed(evt);
            }
        });

        addSong.setText("Add a song");
        addSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongActionPerformed(evt);
            }
        });

        sizeList.setText("Size of list");
        sizeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeListActionPerformed(evt);
            }
        });

        editDuration1.setText("Edit duration");
        editDuration1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDuration1ActionPerformed(evt);
            }
        });

        showLastSong.setText("Show Last Song");
        showLastSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showLastSongActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(addSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortDuration)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sizeList))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(editDuration1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showLastSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSong)
                    .addComponent(sortDuration)
                    .addComponent(deleteSong)
                    .addComponent(sizeList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(showAll)
                        .addComponent(editDuration1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(showLastSong)
                        .addComponent(reset)))
                .addContainerGap())
        );

        jLabel1.setText("MY MP3 COLLECTION");

        quit.setText("Quit");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(GuiSongList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quit)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quit)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    
    
    private void sortDurationActionPerformed(java.awt.event.ActionEvent evt) {                                             
     
     GuiSongList.setModel(mod);
     int [] arr = songs.getDurationListSort();
     //[1,3,4,8]
     String [] array = songs.getSongList();
     String [] newArray = new String[array.length];
    
      for(int a = 0; a < array.length;a++)
      {
          int dur = arr[a]; // 1
          String temp = array[a]; //blah, duration : 2
          
          String songDurTemp = temp.substring(temp.indexOf("Duration"));
          //"Duration: 1" (example)
          String songDur = songDurTemp.substring(songDurTemp.indexOf(":") + 2);
          // this string is a number like "1" or "5"
          
          for(int b = 0; b < newArray.length; b++)
          {
              String durTemp = Integer.toString(dur);
              
              if(durTemp.equals(songDur))
              {
                  newArray[b] = temp;
              }
              
          }
          
          
          System.out.println(Arrays.toString(newArray));
      }
       
       
    
    }                                            

    private void deleteSongActionPerformed(java.awt.event.ActionEvent evt) {                                           
        String songName = JOptionPane.showInputDialog("Enter the name of the song: ");
        songs.deleteSong(songName);
        // there is a deleteSong method in songList.java and we are calling the method
        // it takes in a song name to be "deleted"
        // You have press showAll button to update the jlist
    }                                          

    private void sizeListActionPerformed(java.awt.event.ActionEvent evt) {                                         
     GuiSongList.setModel(mod);
     String [] arr = songs.getSongList();
     int size = arr.length;
     mod.addElement("Your song list size is: " +size);
     
     // just simply retreiving the size of the array and printing it in the jlist
    
    }                                        

    private void showAllActionPerformed(java.awt.event.ActionEvent evt) {                                        
        
     GuiSongList.setModel(mod);
     String [] arr = songs.getSongList();
     
     mod.clear();
     for(int a =0; a< arr.length; a++)
     {
         String temp = arr[a];
         mod.addElement(temp);
     }
      // We using a DefaultListModel called mod which allows us to input strings in the jlist 
      // In the addSongActionPerformed we added the inputted songs into an array
      // we are looping through the array and inserting the values in the jlist.
      
     
    }                                       

    private void editDuration1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
       String songName = JOptionPane.showInputDialog("Enter the name of the song: ");
       String songDuration = JOptionPane.showInputDialog("Enter the NEW duration of the song:");
       int duration = Integer.parseInt(songDuration);
       songs.editDuration(songName,duration);
    }                                             

    private void showLastSongActionPerformed(java.awt.event.ActionEvent evt) {                                             
       
       GuiSongList.setModel(mod);
       String lastSong  = songs.getLastSong();
       mod.addElement(lastSong);
       
       
       
    }                                            

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {                                      
       
        songs.reset();
        
    }                                     

    private void quitActionPerformed(java.awt.event.ActionEvent evt) {                                     
      System.exit(0);
      // this quits the program
    }                                    

    private void addSongActionPerformed(java.awt.event.ActionEvent evt) {                                        
        
        String songName = JOptionPane.showInputDialog("Enter the name of the song: ");
        String songDuration = JOptionPane.showInputDialog("Enter the duration of the song: ");
        song newSong = new song(songName,songDuration);
        songs.addASong(newSong);
        // gets input from the user then makes a new song with the inputted songName and songDuration
        // This adds it to a array called songs by using the addASong method 
        
    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MP3GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MP3GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MP3GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MP3GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MP3GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JList<String> GuiSongList;
    private javax.swing.JButton addSong;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton deleteSong;
    private javax.swing.JButton editDuration1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton quit;
    private javax.swing.JButton reset;
    private javax.swing.JButton showAll;
    private javax.swing.JButton showLastSong;
    private javax.swing.JButton sizeList;
    private javax.swing.JButton sortDuration;
    // End of variables declaration                   
}
